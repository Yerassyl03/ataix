import requests


API_BASE_URL = "https://api.ataix.kz/api"


def log_event(message, event_type="INFO"):
    icons = {
        "INFO": "‚ÑπÔ∏è",
        "SUCCESS": "‚úÖ",
        "WARNING": "‚ö†Ô∏è",
        "ERROR": "‚ùå"
    }
    print(f"{icons.get(event_type, '‚ÑπÔ∏è')} {message}")

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –≤–∞–ª—é—Ç
def get_currencies():
    url = f"{API_BASE_URL}/currencies"
    log_event(f"üîÑ –ó–∞–ø—Ä–æ—Å –∫ API: {url}", "INFO")

    response = requests.get(url)
    if response.status_code == 200:
        currencies = response.json()
        log_event("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API (–≤–∞–ª—é—Ç—ã)", "SUCCESS")

        print("\nüìä **–°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç:**")
        print("üîç Debug:", currencies)  

        # –ï—Å–ª–∏ `currencies` - —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫, –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º –∏—Ö
        if isinstance(currencies, list) and all(isinstance(item, str) for item in currencies):
            for currency in currencies:
                print(f"üí∞ {currency}")  # –í—ã–≤–æ–¥ –±–µ–∑ .get()
        # –ï—Å–ª–∏ `currencies` - —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º .get()
        elif isinstance(currencies, list) and all(isinstance(item, dict) for item in currencies):
            for currency in currencies:
                print(f"üí∞ {currency.get('symbol', 'N/A')} - {currency.get('name', 'N/A')}")
        else:
            log_event("‚ö†Ô∏è –ù–µ–ø–æ–Ω—è—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö!", "WARNING")

        log_event(f"üìà –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç: {len(currencies)}", "INFO")
    else:
        log_event(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text}", "ERROR")

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä
def get_symbols():
    url = f"{API_BASE_URL}/symbols"
    log_event(f"üîÑ –ó–∞–ø—Ä–æ—Å –∫ API: {url}", "INFO")

    response = requests.get(url)
    if response.status_code == 200:
        symbols = response.json()
        log_event("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API (—Ç–æ—Ä–≥–æ–≤—ã–µ –ø–∞—Ä—ã)", "SUCCESS")

        print("\nüìä **–°–ø–∏—Å–æ–∫ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä:**")
        for symbol in symbols:
            print(f"üîÑ {symbol}")
        
        log_event(f"üìà –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä: {len(symbols)}", "INFO")
    else:
        log_event(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text}", "ERROR")

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω –≤—Å–µ—Ö –º–æ–Ω–µ—Ç –∏ —Ç–æ–∫–µ–Ω–æ–≤
def get_prices():
    url = f"{API_BASE_URL}/prices"
    log_event(f"üîÑ –ó–∞–ø—Ä–æ—Å –∫ API: {url}", "INFO")

    response = requests.get(url)
    if response.status_code == 200:
        prices = response.json()
        log_event("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API (—Ü–µ–Ω—ã)", "SUCCESS")

        print("\nüìä **–¶–µ–Ω—ã –º–æ–Ω–µ—Ç –∏ —Ç–æ–∫–µ–Ω–æ–≤ (Debug):**")
        print(prices)  # –í—ã–≤–æ–¥–∏–º —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ prices —Å–ø–∏—Å–∫–æ–º —Å–ª–æ–≤–∞—Ä–µ–π
        if isinstance(prices, list) and all(isinstance(item, dict) for item in prices):
            for price in prices:
                print(f"üí≤ {price.get('symbol', 'N/A')}: {price.get('price', 'N/A')}")
            log_event(f"üìà –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(prices)}", "INFO")
        else:
            log_event("‚ö†Ô∏è –§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π! –í–æ–∑–º–æ–∂–Ω–æ, API –∏–∑–º–µ–Ω–∏–ª–æ—Å—å.", "WARNING")
    else:
        log_event(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text}", "ERROR")

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
if __name__ == "__main__":
    get_currencies()
    get_symbols()
    get_prices()
